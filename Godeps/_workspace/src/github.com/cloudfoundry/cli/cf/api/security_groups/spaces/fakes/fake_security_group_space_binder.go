// This file was generated by counterfeiter
package tmp

import (
	. "github.com/cloudfoundry/cli/cf/api/security_groups/spaces"
	"sync"
)

type FakeSecurityGroupSpaceBinder struct {
	BindSpaceStub        func(securityGroupGuid string, spaceGuid string) error
	bindSpaceMutex       sync.RWMutex
	bindSpaceArgsForCall []struct {
		arg1 string
		arg2 string
	}
	bindSpaceReturns struct {
		result1 error
	}

	UnbindSpaceStub        func(securityGroupGuid string, spaceGuid string) error
	unbindSpaceMutex       sync.RWMutex
	unbindSpaceArgsForCall []struct {
		arg1 string
		arg2 string
	}
	unbindSpaceReturns struct {
		result1 error
	}
}

func (fake *FakeSecurityGroupSpaceBinder) BindSpace(arg1 string, arg2 string) error {
	fake.bindSpaceMutex.Lock()
	defer fake.bindSpaceMutex.Unlock()
	fake.bindSpaceArgsForCall = append(fake.bindSpaceArgsForCall, struct {
		arg1 string
		arg2 string
	}{arg1, arg2})
	if fake.BindSpaceStub != nil {
		return fake.BindSpaceStub(arg1, arg2)
	} else {
		return fake.bindSpaceReturns.result1
	}
}

func (fake *FakeSecurityGroupSpaceBinder) BindSpaceCallCount() int {
	fake.bindSpaceMutex.RLock()
	defer fake.bindSpaceMutex.RUnlock()
	return len(fake.bindSpaceArgsForCall)
}

func (fake *FakeSecurityGroupSpaceBinder) BindSpaceArgsForCall(i int) (string, string) {
	fake.bindSpaceMutex.RLock()
	defer fake.bindSpaceMutex.RUnlock()
	return fake.bindSpaceArgsForCall[i].arg1, fake.bindSpaceArgsForCall[i].arg2
}

func (fake *FakeSecurityGroupSpaceBinder) BindSpaceReturns(result1 error) {
	fake.bindSpaceReturns = struct {
		result1 error
	}{result1}
}

func (fake *FakeSecurityGroupSpaceBinder) UnbindSpace(arg1 string, arg2 string) error {
	fake.unbindSpaceMutex.Lock()
	defer fake.unbindSpaceMutex.Unlock()
	fake.unbindSpaceArgsForCall = append(fake.unbindSpaceArgsForCall, struct {
		arg1 string
		arg2 string
	}{arg1, arg2})
	if fake.UnbindSpaceStub != nil {
		return fake.UnbindSpaceStub(arg1, arg2)
	} else {
		return fake.unbindSpaceReturns.result1
	}
}

func (fake *FakeSecurityGroupSpaceBinder) UnbindSpaceCallCount() int {
	fake.unbindSpaceMutex.RLock()
	defer fake.unbindSpaceMutex.RUnlock()
	return len(fake.unbindSpaceArgsForCall)
}

func (fake *FakeSecurityGroupSpaceBinder) UnbindSpaceArgsForCall(i int) (string, string) {
	fake.unbindSpaceMutex.RLock()
	defer fake.unbindSpaceMutex.RUnlock()
	return fake.unbindSpaceArgsForCall[i].arg1, fake.unbindSpaceArgsForCall[i].arg2
}

func (fake *FakeSecurityGroupSpaceBinder) UnbindSpaceReturns(result1 error) {
	fake.unbindSpaceReturns = struct {
		result1 error
	}{result1}
}

var _ SecurityGroupSpaceBinder = new(FakeSecurityGroupSpaceBinder)
