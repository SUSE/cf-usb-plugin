package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/hpcloud/cf-plugin-usb/lib/models"
)

// GetServiceByInstanceIDReader is a Reader for the GetServiceByInstanceID structure.
type GetServiceByInstanceIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the recieved o.
func (o *GetServiceByInstanceIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetServiceByInstanceIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 500:
		result := NewGetServiceByInstanceIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetServiceByInstanceIDOK creates a GetServiceByInstanceIDOK with default headers values
func NewGetServiceByInstanceIDOK() *GetServiceByInstanceIDOK {
	return &GetServiceByInstanceIDOK{}
}

/*GetServiceByInstanceIDOK handles this case with default header values.

Sucessfull response
*/
type GetServiceByInstanceIDOK struct {
	Payload *models.Service
}

func (o *GetServiceByInstanceIDOK) Error() string {
	return fmt.Sprintf("[GET /services][%d] getServiceByInstanceIdOK  %+v", 200, o.Payload)
}

func (o *GetServiceByInstanceIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Service)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetServiceByInstanceIDInternalServerError creates a GetServiceByInstanceIDInternalServerError with default headers values
func NewGetServiceByInstanceIDInternalServerError() *GetServiceByInstanceIDInternalServerError {
	return &GetServiceByInstanceIDInternalServerError{}
}

/*GetServiceByInstanceIDInternalServerError handles this case with default header values.

Unexpected error
*/
type GetServiceByInstanceIDInternalServerError struct {
	Payload string
}

func (o *GetServiceByInstanceIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /services][%d] getServiceByInstanceIdInternalServerError  %+v", 500, o.Payload)
}

func (o *GetServiceByInstanceIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
