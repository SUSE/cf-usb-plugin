package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/hpcloud/cf-plugin-usb/lib/models"
)

// GetDriverReader is a Reader for the GetDriver structure.
type GetDriverReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the recieved o.
func (o *GetDriverReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetDriverOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewGetDriverNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetDriverInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetDriverOK creates a GetDriverOK with default headers values
func NewGetDriverOK() *GetDriverOK {
	return &GetDriverOK{}
}

/*GetDriverOK handles this case with default header values.

OK
*/
type GetDriverOK struct {
	Payload *models.Driver
}

func (o *GetDriverOK) Error() string {
	return fmt.Sprintf("[GET /drivers/{driver_id}][%d] getDriverOK  %+v", 200, o.Payload)
}

func (o *GetDriverOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Driver)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDriverNotFound creates a GetDriverNotFound with default headers values
func NewGetDriverNotFound() *GetDriverNotFound {
	return &GetDriverNotFound{}
}

/*GetDriverNotFound handles this case with default header values.

Not Found
*/
type GetDriverNotFound struct {
}

func (o *GetDriverNotFound) Error() string {
	return fmt.Sprintf("[GET /drivers/{driver_id}][%d] getDriverNotFound ", 404)
}

func (o *GetDriverNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDriverInternalServerError creates a GetDriverInternalServerError with default headers values
func NewGetDriverInternalServerError() *GetDriverInternalServerError {
	return &GetDriverInternalServerError{}
}

/*GetDriverInternalServerError handles this case with default header values.

Unexpected error
*/
type GetDriverInternalServerError struct {
	Payload string
}

func (o *GetDriverInternalServerError) Error() string {
	return fmt.Sprintf("[GET /drivers/{driver_id}][%d] getDriverInternalServerError  %+v", 500, o.Payload)
}

func (o *GetDriverInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
