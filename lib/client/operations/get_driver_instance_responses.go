package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-swagger/go-swagger/client"
	"github.com/go-swagger/go-swagger/httpkit"
	"github.com/go-swagger/go-swagger/strfmt"

	"github.com/hpcloud/cf-plugin-usb/lib/models"
)

// GetDriverInstanceReader is a Reader for the GetDriverInstance structure.
type GetDriverInstanceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the recieved o.
func (o *GetDriverInstanceReader) ReadResponse(response client.Response, consumer httpkit.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetDriverInstanceOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewGetDriverInstanceNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetDriverInstanceInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetDriverInstanceOK creates a GetDriverInstanceOK with default headers values
func NewGetDriverInstanceOK() *GetDriverInstanceOK {
	return &GetDriverInstanceOK{}
}

/*GetDriverInstanceOK handles this case with default header values.

OK
*/
type GetDriverInstanceOK struct {
	Payload *models.DriverInstance
}

func (o *GetDriverInstanceOK) Error() string {
	return fmt.Sprintf("[GET /driver_instances/{driver_instance_id}][%d] getDriverInstanceOK  %+v", 200, o.Payload)
}

func (o *GetDriverInstanceOK) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DriverInstance)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDriverInstanceNotFound creates a GetDriverInstanceNotFound with default headers values
func NewGetDriverInstanceNotFound() *GetDriverInstanceNotFound {
	return &GetDriverInstanceNotFound{}
}

/*GetDriverInstanceNotFound handles this case with default header values.

Not Found
*/
type GetDriverInstanceNotFound struct {
}

func (o *GetDriverInstanceNotFound) Error() string {
	return fmt.Sprintf("[GET /driver_instances/{driver_instance_id}][%d] getDriverInstanceNotFound ", 404)
}

func (o *GetDriverInstanceNotFound) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDriverInstanceInternalServerError creates a GetDriverInstanceInternalServerError with default headers values
func NewGetDriverInstanceInternalServerError() *GetDriverInstanceInternalServerError {
	return &GetDriverInstanceInternalServerError{}
}

/*GetDriverInstanceInternalServerError handles this case with default header values.

Unexpected error
*/
type GetDriverInstanceInternalServerError struct {
	Payload string
}

func (o *GetDriverInstanceInternalServerError) Error() string {
	return fmt.Sprintf("[GET /driver_instances/{driver_instance_id}][%d] getDriverInstanceInternalServerError  %+v", 500, o.Payload)
}

func (o *GetDriverInstanceInternalServerError) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
