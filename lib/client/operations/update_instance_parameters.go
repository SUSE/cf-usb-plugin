package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/hpcloud/cf-plugin-usb/lib/models"
)

// NewUpdateInstanceParams creates a new UpdateInstanceParams object
// with the default values initialized.
func NewUpdateInstanceParams() *UpdateInstanceParams {
	var ()
	return &UpdateInstanceParams{}
}

/*UpdateInstanceParams contains all the parameters to send to the API endpoint
for the update instance operation typically these are written to a http.Request
*/
type UpdateInstanceParams struct {

	/*InstanceConfig
	  Add instance_config

	*/
	InstanceConfig *models.Instance
	/*InstanceID
	  Instance ID

	*/
	InstanceID string
}

// WithInstanceConfig adds the instanceConfig to the update instance params
func (o *UpdateInstanceParams) WithInstanceConfig(InstanceConfig *models.Instance) *UpdateInstanceParams {
	o.InstanceConfig = InstanceConfig
	return o
}

// WithInstanceID adds the instanceId to the update instance params
func (o *UpdateInstanceParams) WithInstanceID(InstanceID string) *UpdateInstanceParams {
	o.InstanceID = InstanceID
	return o
}

// WriteToRequest writes these params to a swagger request
func (o *UpdateInstanceParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	var res []error

	if o.InstanceConfig == nil {
		o.InstanceConfig = new(models.Instance)
	}

	if err := r.SetBodyParam(o.InstanceConfig); err != nil {
		return err
	}

	// path param instance_id
	if err := r.SetPathParam("instance_id", o.InstanceID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
