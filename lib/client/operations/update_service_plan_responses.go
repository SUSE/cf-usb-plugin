package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/hpcloud/cf-plugin-usb/lib/models"
)

// UpdateServicePlanReader is a Reader for the UpdateServicePlan structure.
type UpdateServicePlanReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the recieved o.
func (o *UpdateServicePlanReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewUpdateServicePlanOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewUpdateServicePlanNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewUpdateServicePlanInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewUpdateServicePlanOK creates a UpdateServicePlanOK with default headers values
func NewUpdateServicePlanOK() *UpdateServicePlanOK {
	return &UpdateServicePlanOK{}
}

/*UpdateServicePlanOK handles this case with default header values.

Sucessfull response
*/
type UpdateServicePlanOK struct {
	Payload *models.Plan
}

func (o *UpdateServicePlanOK) Error() string {
	return fmt.Sprintf("[PUT /plans/{plan_id}][%d] updateServicePlanOK  %+v", 200, o.Payload)
}

func (o *UpdateServicePlanOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Plan)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateServicePlanNotFound creates a UpdateServicePlanNotFound with default headers values
func NewUpdateServicePlanNotFound() *UpdateServicePlanNotFound {
	return &UpdateServicePlanNotFound{}
}

/*UpdateServicePlanNotFound handles this case with default header values.

Not Found
*/
type UpdateServicePlanNotFound struct {
}

func (o *UpdateServicePlanNotFound) Error() string {
	return fmt.Sprintf("[PUT /plans/{plan_id}][%d] updateServicePlanNotFound ", 404)
}

func (o *UpdateServicePlanNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateServicePlanInternalServerError creates a UpdateServicePlanInternalServerError with default headers values
func NewUpdateServicePlanInternalServerError() *UpdateServicePlanInternalServerError {
	return &UpdateServicePlanInternalServerError{}
}

/*UpdateServicePlanInternalServerError handles this case with default header values.

Unexpected error
*/
type UpdateServicePlanInternalServerError struct {
	Payload string
}

func (o *UpdateServicePlanInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /plans/{plan_id}][%d] updateServicePlanInternalServerError  %+v", 500, o.Payload)
}

func (o *UpdateServicePlanInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
